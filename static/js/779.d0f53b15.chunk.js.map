{"version":3,"file":"static/js/779.d0f53b15.chunk.js","mappings":"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","sources":["redux/selectors.js","components/TweetCardItem/TweetCardItem.styled.jsx","components/TweetCardItem/TweetCardItem.jsx","components/TweetCardList/TweetCardList.styled.jsx","components/TweetCardList/TweetCardList.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["// import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const selectUsers = state => state.users.items;\r\n\r\nexport const selectIsLoading = state => state.users.isLoading;\r\n\r\nexport const selectError = state => state.users.error;\r\n\r\nexport const selectFilter = state => state.filter.value;\r\n\r\n// export const selectVisibleContacts = createSelector(\r\n//   [selectContacts, selectFilter], (contacts, filter) => contacts.filter(contact =>\r\n//   contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n// );","import styled from \"styled-components\";\r\n\r\nexport const BackgroundImage = styled.img`\r\n  width: 308px;\r\n  height: 168px;\r\n  margin-bottom: 88px;\r\n`;\r\n\r\nexport const CardDivider = styled.div`\r\n  position: absolute;\r\n  top: 214px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 8px;\r\n  background: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\r\n`;\r\n\r\nexport const UserAvatarWrapper = styled.div`\r\n  position: absolute;\r\n  left: calc(50% - 40px);\r\n  top: 174px;\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  border: 8px solid #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const UserAvatarImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  scale: 1;\r\n  transition: scale 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    scale: 1.5;\r\n  }\r\n`;\r\n\r\nexport const TweetCount = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  color: #ebd8ff;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const FollowerCount = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  color: #ebd8ff;\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nexport const SubscribeButton = styled.button`\r\n  min-width: 196px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  border: none;\r\n  color: #373737;\r\n  background-color: #ebd8ff;\r\n  padding: 14px 28px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: #5cd3a8;\r\n  }\r\n`;\r\n","import {\r\n  BackgroundImage,\r\n  CardDivider,\r\n  UserAvatarWrapper,\r\n  UserAvatarImage,\r\n  TweetCount,\r\n  FollowerCount,\r\n  SubscribeButton,\r\n} from \"./TweetCardItem.styled\";\r\n\r\nimport bg from \"./bg.png\";\r\n\r\nconst TweetCardItem = ({ user: { user, tweets, followers, avatar } }) => {\r\n  return (\r\n    <>\r\n      <BackgroundImage src={bg} alt=\"avatar\" />\r\n      <CardDivider />\r\n      <UserAvatarWrapper>\r\n        <UserAvatarImage src={avatar} alt={`Avatar of ${user.name}`} />\r\n      </UserAvatarWrapper>\r\n      <TweetCount>{`${tweets} tweets`}</TweetCount>\r\n      <FollowerCount>{`${followers} followers`}</FollowerCount>\r\n      <SubscribeButton>Follow</SubscribeButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetCardItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TweetList = styled.ul`\r\n  display: grid;\r\n  justify-items: center;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const TweetCard = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 28px 36px 36px;\r\n  max-width: 380px;\r\n  min-width: 0;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n  transition: transform 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n`;\r\n","import TweetCardItem from \"../TweetCardItem/TweetCardItem\";\r\nimport { TweetList, TweetCard } from \"./TweetCardList.styled\";\r\n\r\nconst TweetCardList = ({ users }) => {\r\n  return (\r\n    <>\r\n      <TweetList>\r\n        {users.map((user) => (\r\n          <TweetCard key={user.id}>\r\n            <TweetCardItem user={user} />\r\n          </TweetCard>\r\n        ))}\r\n      </TweetList>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetCardList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoadingMessage = styled.b``;","import {LoadingMessage} from './Loader.styled';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <LoadingMessage>Request in progress...</LoadingMessage>\r\n  );\r\n};\r\n\r\nexport default Loader;","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers } from \"../../redux/operations\";\r\nimport {\r\n  selectUsers,\r\n  selectError,\r\n  selectIsLoading,\r\n} from \"../../redux/selectors\";\r\nimport { TweetCardList } from \"../../components\";\r\nimport { Loader } from \"../../components\";\r\n\r\nconst TweetsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n  const users = useSelector(selectUsers);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <p>TweetsPage</p>\r\n      <TweetCardList users={users} />\r\n      {isLoading && !error && <Loader />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetsPage;\r\n"],"names":["selectUsers","state","users","items","selectIsLoading","isLoading","selectError","error","BackgroundImage","styled","_templateObject","_taggedTemplateLiteral","CardDivider","_templateObject2","UserAvatarWrapper","_templateObject3","UserAvatarImage","_templateObject4","TweetCount","_templateObject5","FollowerCount","_templateObject6","SubscribeButton","_templateObject7","_ref","_ref$user","user","tweets","followers","avatar","_jsxs","_Fragment","children","_jsx","src","bg","alt","concat","name","TweetList","TweetCard","map","TweetCardItem","id","LoadingMessage","dispatch","useDispatch","useSelector","useEffect","fetchUsers","TweetCardList","Loader"],"sourceRoot":""}