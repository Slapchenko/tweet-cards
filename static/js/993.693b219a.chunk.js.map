{"version":3,"file":"static/js/993.693b219a.chunk.js","mappings":"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","sources":["redux/selectors.js","components/TweetCardItem/TweetCardItem.styled.jsx","components/TweetCardItem/TweetCardItem.jsx","components/TweetCardList/TweetCardList.styled.jsx","components/TweetCardList/TweetCardList.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/StatusFilter/StatusFilter.styled.jsx","components/StatusFilter/StatusFilter.jsx","pages/TweetsPage/TweetsPage.styled.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { statusFilters } from \"./constants\";\r\n\r\nexport const selectUsers = (state) => state.users.items;\r\n\r\nexport const selectIsLoading = (state) => state.users.isLoading;\r\n\r\nexport const selectError = (state) => state.users.error;\r\n\r\nexport const selectStatusFilter = (state) => state.filter.status;\r\n\r\nexport const selectVisibleUsers = createSelector(\r\n  [selectUsers, selectStatusFilter],\r\n  (users, statusFilter) => {\r\n    switch (statusFilter) {\r\n      case statusFilters.follow:\r\n        return users.filter((user) => !user.follow);\r\n      case statusFilters.followings:\r\n        return users.filter((user) => user.follow);\r\n      default:\r\n        return users;\r\n    }\r\n  }\r\n);\r\n","import styled from \"styled-components\";\n\nexport const BackgroundImage = styled.img`\n  width: 308px;\n  height: 168px;\n  margin-bottom: 88px;\n`;\n\nexport const CardDivider = styled.div`\n  position: absolute;\n  top: 214px;\n  left: 0;\n  width: 100%;\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const UserAvatarWrapper = styled.div`\n  position: absolute;\n  left: calc(50% - 40px);\n  top: 174px;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  border: 8px solid #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UserAvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n  scale: 1;\n  transition: scale 0.3s ease-in-out;\n\n  &:hover {\n    scale: 1.5;\n  }\n`;\n\nexport const TweetCount = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: #ebd8ff;\n  margin-bottom: 16px;\n`;\n\nexport const FollowerCount = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: #ebd8ff;\n  margin-bottom: 26px;\n`;\n\nexport const SubscribeButton = styled.button`\n  min-width: 196px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  border: none;\n  color: #373737;\n  background-color: ${({ follow }) => (follow ? \"#5cd3a8\" : \"#ebd8ff\")};\n  padding: 14px 28px;\n  border-radius: 10px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #5cd3a8;\n  }\n`;\n","import { useDispatch } from \"react-redux\";\nimport { toggleFollow } from \"../../redux/operations\"\nimport {\n  BackgroundImage,\n  CardDivider,\n  UserAvatarWrapper,\n  UserAvatarImage,\n  TweetCount,\n  FollowerCount,\n  SubscribeButton,\n} from \"./TweetCardItem.styled\";\n\nimport bg from \"./bg.png\"; //!\n\nconst TweetCardItem = ({\n  user: { id, user, tweets, followers, avatar, follow },\n}) => {\n  const dispatch = useDispatch();\n\n  const handleFollowToggle = () => {\n    dispatch(toggleFollow(id));\n  };\n\n  return (\n    <>\n      <BackgroundImage src={bg} alt=\"avatar\" />\n      <CardDivider />\n      <UserAvatarWrapper>\n        <UserAvatarImage src={avatar} alt={`Avatar of ${user.name}`} />\n      </UserAvatarWrapper>\n      <TweetCount>{`${(tweets + 100000).toLocaleString('en-US')} tweets`}</TweetCount>\n      <FollowerCount>{`${followers.toLocaleString('en-US')} followers`}</FollowerCount>\n      <SubscribeButton follow={follow} onClick={handleFollowToggle}>\n        {follow ? \"Following\" : \"Follow\"}\n      </SubscribeButton>\n    </>\n  );\n};\n\nexport default TweetCardItem;\n","import styled from \"styled-components\";\n\nexport const TweetList = styled.ul`\n  display: grid;\n  justify-items: center;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const TweetCard = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 28px 36px 36px;\n  max-width: 380px;\n  min-width: 0;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n","import TweetCardItem from \"../TweetCardItem/TweetCardItem\";\nimport { TweetList, TweetCard } from \"./TweetCardList.styled\";\n\nconst TweetCardList = ({ users }) => {\n  return (\n    <>\n      <TweetList>\n        {users.map((user) => (\n          <TweetCard key={user.id}>\n            <TweetCardItem user={user} />\n          </TweetCard>\n        ))}\n      </TweetList>\n    </>\n  );\n};\n\nexport default TweetCardList;\n","import styled from \"styled-components\";\r\n\r\nexport const LoadingMessage = styled.b``;","import {LoadingMessage} from './Loader.styled';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <LoadingMessage>Request in progress...</LoadingMessage>\r\n  );\r\n};\r\n\r\nexport default Loader;","import styled from \"styled-components\";\n\nexport const Title = styled.p``;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const FilterButton = styled.button`\n  min-width: 100px;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 22px;\n  border: none;\n  color: #373737;\n  background-color: ${(props) => (props.selected ? \"#5cd3a8\" : \"#ebd8ff\")};\n  padding: 10px 20px;\n  border-radius: 10px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #5cd3a8;\n  }\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Wrapper, FilterButton } from \"./StatusFilter.styled\";\nimport { statusFilters } from \"../../redux/constants\";\nimport { selectStatusFilter } from \"../../redux/selectors\";\nimport { setStatusFilter } from \"../../redux/filterSlice\";\n\nconst StatusFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const handleFilterChange = (filter) => dispatch(setStatusFilter(filter));\n\n  return (\n    <>\n      <Wrapper>\n        <FilterButton\n          selected={filter === statusFilters.all}\n          onClick={() => handleFilterChange(statusFilters.all)}\n        >\n          show all\n        </FilterButton>\n        <FilterButton\n          selected={filter === statusFilters.follow}\n          onClick={() => handleFilterChange(statusFilters.follow)}\n        >\n          follow\n        </FilterButton>\n        <FilterButton\n          selected={filter === statusFilters.followings}\n          onClick={() => handleFilterChange(statusFilters.followings)}\n        >\n          followings\n        </FilterButton>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default StatusFilter;\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const LoadMoreButton = styled.button`\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  border: none;\r\n  color: #373737;\r\n  background-color: ${({ follow }) => (follow ? \"#5cd3a8\" : \"#ebd8ff\")};\r\n  padding: 14px 28px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: #5cd3a8;\r\n  }\r\n`;","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsers } from \"../../redux/operations\";\nimport {\n  selectVisibleUsers,\n  selectError,\n  selectIsLoading,\n} from \"../../redux/selectors\";\nimport { TweetCardList, Loader, StatusFilter } from \"components\";\nimport { LoadMoreButton } from \"./TweetsPage.styled\";\n\n\nconst TweetsPage = () => {\n  const [visible, setVisible] = useState(10)\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const users = useSelector(selectVisibleUsers);\n\n useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  \n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\nconst showMoreItems = () => {setVisible((prevValue) => prevValue + 10)}\n\n  return (\n    <>\n      <StatusFilter />\n      <TweetCardList users={users.slice(0, visible)} />\n      {isLoading && !error && <Loader />}\n      {visible < users.length && (\n      <LoadMoreButton onClick={showMoreItems}>Load more</LoadMoreButton>\n)}\n    </>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["selectIsLoading","state","users","isLoading","selectError","error","selectStatusFilter","filter","status","selectVisibleUsers","createSelector","items","statusFilter","statusFilters","user","follow","BackgroundImage","styled","_templateObject","_taggedTemplateLiteral","CardDivider","_templateObject2","UserAvatarWrapper","_templateObject3","UserAvatarImage","_templateObject4","TweetCount","_templateObject5","FollowerCount","_templateObject6","SubscribeButton","_templateObject7","_ref","_ref$user","id","tweets","followers","avatar","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","src","bg","alt","concat","name","toLocaleString","onClick","toggleFollow","TweetList","TweetCard","map","TweetCardItem","LoadingMessage","Wrapper","FilterButton","props","selected","useSelector","handleFilterChange","setStatusFilter","LoadMoreButton","_useState","useState","_useState2","_slicedToArray","visible","setVisible","useEffect","fetchUsers","StatusFilter","TweetCardList","slice","Loader","length","prevValue"],"sourceRoot":""}