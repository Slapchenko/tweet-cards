{"version":3,"file":"static/js/250.9750e28d.chunk.js","mappings":"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","sources":["redux/selectors.js","components/TweetCardItem/TweetCardItem.styled.jsx","components/TweetCardItem/TweetCardItem.jsx","components/TweetCardList/TweetCardList.styled.jsx","components/TweetCardList/TweetCardList.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/StatusFilter/StatusFilter.styled.jsx","components/StatusFilter/StatusFilter.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { statusFilters } from \"./constants\";\r\n\r\nexport const selectUsers = (state) => state.users.items;\r\n\r\nexport const selectIsLoading = (state) => state.users.isLoading;\r\n\r\nexport const selectError = (state) => state.users.error;\r\n\r\nexport const selectStatusFilter = (state) => state.filter.status;\r\n\r\nexport const selectVisibleUsers = createSelector(\r\n  [selectUsers, selectStatusFilter],\r\n  (users, statusFilter) => {\r\n    switch (statusFilter) {\r\n      case statusFilters.follow:\r\n        return users.filter((user) => !user.follow);\r\n      case statusFilters.followings:\r\n        return users.filter((user) => user.follow);\r\n      default:\r\n        return users;\r\n    }\r\n  }\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const BackgroundImage = styled.img`\r\n  width: 308px;\r\n  height: 168px;\r\n  margin-bottom: 88px;\r\n`;\r\n\r\nexport const CardDivider = styled.div`\r\n  position: absolute;\r\n  top: 214px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 8px;\r\n  background: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\r\n`;\r\n\r\nexport const UserAvatarWrapper = styled.div`\r\n  position: absolute;\r\n  left: calc(50% - 40px);\r\n  top: 174px;\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  border: 8px solid #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const UserAvatarImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  scale: 1;\r\n  transition: scale 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    scale: 1.5;\r\n  }\r\n`;\r\n\r\nexport const TweetCount = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  color: #ebd8ff;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const FollowerCount = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  color: #ebd8ff;\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nexport const SubscribeButton = styled.button`\r\n  min-width: 196px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  border: none;\r\n  color: #373737;\r\n  background-color: ${({ follow }) => (follow ? \"#5cd3a8\" : \"#ebd8ff\")};\r\n  padding: 14px 28px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: #5cd3a8;\r\n  }\r\n`;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { toggleFollow } from \"../../redux/userSlice\";\r\nimport {\r\n  BackgroundImage,\r\n  CardDivider,\r\n  UserAvatarWrapper,\r\n  UserAvatarImage,\r\n  TweetCount,\r\n  FollowerCount,\r\n  SubscribeButton,\r\n} from \"./TweetCardItem.styled\";\r\n\r\nimport bg from \"./bg.png\"; //!\r\n\r\nconst TweetCardItem = ({\r\n  user: { id, user, tweets, followers, avatar, follow },\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFollowToggle = () => {\r\n    dispatch(toggleFollow(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BackgroundImage src={bg} alt=\"avatar\" />\r\n      <CardDivider />\r\n      <UserAvatarWrapper>\r\n        <UserAvatarImage src={avatar} alt={`Avatar of ${user.name}`} />\r\n      </UserAvatarWrapper>\r\n      <TweetCount>{`${tweets} tweets`}</TweetCount>\r\n      <FollowerCount>{`${followers} followers`}</FollowerCount>\r\n      <SubscribeButton follow={follow} onClick={handleFollowToggle}>\r\n        {follow ? \"Following\" : \"Follow\"}\r\n      </SubscribeButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetCardItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TweetList = styled.ul`\r\n  display: grid;\r\n  justify-items: center;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const TweetCard = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 28px 36px 36px;\r\n  max-width: 380px;\r\n  min-width: 0;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n  transition: transform 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n`;\r\n","import TweetCardItem from \"../TweetCardItem/TweetCardItem\";\r\nimport { TweetList, TweetCard } from \"./TweetCardList.styled\";\r\n\r\nconst TweetCardList = ({ users }) => {\r\n  return (\r\n    <>\r\n      <TweetList>\r\n        {users.map((user) => (\r\n          <TweetCard key={user.id}>\r\n            <TweetCardItem user={user} />\r\n          </TweetCard>\r\n        ))}\r\n      </TweetList>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetCardList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoadingMessage = styled.b``;","import {LoadingMessage} from './Loader.styled';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <LoadingMessage>Request in progress...</LoadingMessage>\r\n  );\r\n};\r\n\r\nexport default Loader;","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.p``;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const FilterButton = styled.button`\r\n  min-width: 100px;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 22px;\r\n  border: none;\r\n  color: #373737;\r\n  background-color: ${({ follow }) => (follow ? \"#5cd3a8\" : \"#ebd8ff\")};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: #5cd3a8;\r\n  }\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { Wrapper, FilterButton } from \"./StatusFilter.styled\";\r\nimport { statusFilters } from \"../../redux/constants\";\r\nimport { selectStatusFilter } from \"../../redux/selectors\";\r\nimport { setStatusFilter } from \"../../redux/filterSlice\";\r\n\r\nconst StatusFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(selectStatusFilter);\r\n\r\n  const handleFilterChange = (filter) => dispatch(setStatusFilter(filter));\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <FilterButton\r\n          selected={filter === statusFilters.all}\r\n          onClick={() => handleFilterChange(statusFilters.all)}\r\n        >\r\n          show all\r\n        </FilterButton>\r\n        <FilterButton\r\n          selected={filter === statusFilters.follow}\r\n          onClick={() => handleFilterChange(statusFilters.follow)}\r\n        >\r\n          follow\r\n        </FilterButton>\r\n        <FilterButton\r\n          selected={filter === statusFilters.followings}\r\n          onClick={() => handleFilterChange(statusFilters.followings)}\r\n        >\r\n          followings\r\n        </FilterButton>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusFilter;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers } from \"../../redux/operations\";\r\nimport {\r\n  selectVisibleUsers,\r\n  selectError,\r\n  selectIsLoading,\r\n} from \"../../redux/selectors\";\r\nimport { TweetCardList, Loader, StatusFilter } from \"components\";\r\n\r\nconst TweetsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n  const users = useSelector(selectVisibleUsers);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <StatusFilter />\r\n      <TweetCardList users={users} />\r\n      {isLoading && !error && <Loader />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetsPage;\r\n"],"names":["selectIsLoading","state","users","isLoading","selectError","error","selectStatusFilter","filter","status","selectVisibleUsers","createSelector","items","statusFilter","statusFilters","user","follow","BackgroundImage","styled","_templateObject","_taggedTemplateLiteral","CardDivider","_templateObject2","UserAvatarWrapper","_templateObject3","UserAvatarImage","_templateObject4","TweetCount","_templateObject5","FollowerCount","_templateObject6","SubscribeButton","_templateObject7","_ref","_ref$user","id","tweets","followers","avatar","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","src","bg","alt","concat","name","onClick","toggleFollow","TweetList","TweetCard","map","TweetCardItem","LoadingMessage","Wrapper","FilterButton","useSelector","handleFilterChange","setStatusFilter","selected","useEffect","fetchUsers","StatusFilter","TweetCardList","Loader"],"sourceRoot":""}